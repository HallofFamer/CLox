namespace test.features;
using clox.std.util.DateTime;

println("Testing string concatenation...");
println("Current time is: " + DateTime.now.toString());
println("Testing simple string interpolation...");
val steep = 2;
val cool = 3;
println("Tea will be ready in ${steep + cool} minutes.");
println("Testing nested string interpolation...");
println("Nested ${"interpolation?! Are you ${"mad?!"}"}");
println("");

println("Testing escaping characters...");
println("Escaping new line: ");
println("Line 1,\nLine 2.");
println("Escaping backslash: ");
println("8 \\ 2 = 4");
println("Escaping double quote: ");
println("She says \"Nice to meet you!\"");
println("");

println("Testing escaping unicode...");
println("2 digit hex string: \x48\x69\x2e");
println("4 digit unicode string: \u0041\u0b83\u00DE");
println("8 digit unicode string: \U0001F64A\U0001F680");
println("");

println("Testing creating unicode string from char: ");
println("Creating unicode string from byte 255: ${String.fromByte(255)}");
println("Creating unicode string from code point 8225: ${String.fromCodePoint(8225)}");
println("");

val utf8String = "Fäcëhämmër";
println("Testing unicode string with german letters: ${utf8String}");
println("Unicode string contains code point ä: ${utf8String.contains("ä")}");
println("First index of code point ë in unicode String: ${utf8String.indexOf("ë")}");
println("");

val utf8String2 = "👏🐇🏡";
println("Testing unicode string with emojis: ${utf8String2}");
println("Unicode string contains code point 🐇: ${utf8String2.contains("🐇")}");
println("First index of code point 🏡 in unicode string: ${utf8String2.indexOf("🏡")}");
println("");

val utf8String3 = "abcäË🐇⚡🚗дЯDEF";
println("Testing combined unicode string: ${utf8String3}");
println("Number of bytes in unicode string: ${utf8String3.length()}");
println("Number of code points in unicode string: ${utf8String3.count()}");
println("Get byte at index 5 in unicode string: ${utf8String3.getByte(5)}");
println("Get code point at index 7 in unicode string: ${utf8String3.getCodePoint(11)}");
println("Convert Unicode string to upper case: ${utf8String3.toUppercase()}");
println("Convert Unicode string to lower case: ${utf8String3.toLowercase()}");
println("Reverse code points inside Unicode string: ${utf8String3.reverse()}");
println("Replace unicode string character \"äË\" with \"Öü\": ${utf8String3.replace("äË", "Öü")}");
println("");

val utf8SubString = utf8String3.subString(3, 21);
println("Substring of unicode string from index 3 to 21: ${utf8SubString}");
println("Capitalize substring from the unicode string: ${utf8SubString.capitalize()}");
println("Convert Unicode string to byte array: \n${utf8String3.toBytes()}");
println("Convert Unicode string to code point array: \n${utf8String3.toCodePoints()}");
println("");

println("Iterate over combined unicode string: ");
for(var codePoint : utf8String3) {
    println(codePoint);
}
println("");