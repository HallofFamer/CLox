namespace test.features;
using clox.std.collection.Array;

class Fraction {

    __init__(numerator, denominator){
        this.validateNumbers(numerator, denominator);
        this.numerator = numerator;
        this.denominator = denominator;
    }

    validateNumbers(numerator, denominator){
        if(!numerator.instanceOf(Int) or !denominator.instanceOf(Int)){
            throw IllegalArgumentException("Numerator and Denominator must be integers.");
        }
        
        if(denominator == 0){
            throw IllegalArgumentException("Denominator of a Fraction object cannot be 0.");
        }
    }

    reduce(){
        var gcd = this.numerator.gcd(this.denominator);
        var numerator = this.numerator / gcd;
        var denominator = this.denominator / gcd;
        return Fraction(numerator.toInt(), denominator.toInt());
    }

    toString(){
        return this.numerator.toString() + "/" + this.denominator.toString();
    }
}