namespace test.features;

class InterceptObject {   
    init() { 
        this.definedProperty = "property";
    } 

    __beforeGet__(name) { 
        println("Before getting value of property ${name}.");
    }

    __afterGet__(name, value) { 
        println("After getting value of property ${name}.");
        return value;
    }

    __undefinedGet__(name) { 
        println("Accessing undefined property: ${name}.");
    }

    __undefinedInvoke__(name, args){ 
        println("Invoking undefined method: ${name} with ${args.length} arguments: ${args.toString()}.");
    }
}

println("Testing interceptor methods: ");
val intercept = InterceptObject();
intercept.undefinedMethod(0, 2, 4);
intercept.undefinedProperty;
println(intercept.definedProperty);